AWSTemplateFormatVersion: "2010-09-09"

Transform: AWS::Serverless-2016-10-31

Description: "[Pipeline] [Utility] Deploys a Lambda function that controls AWS S3 file uploads via CodePipeline."

Resources:

  TransferFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: transfer.handler
      Runtime: nodejs8.10
      CodeUri: ./out
      MemorySize: 512
      Timeout: 30

  TransferFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub "lambda.${AWS::URLSuffix}"
            Action: sts:AssumeRole

  TransferFunctionExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: ExecutionPermissions
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !GetAtt TransferFunctionLogGroup.Arn
          - Effect: Allow
            Action:
              - sts:AssumeRole
              - codepipeline:PutJobSuccessResult
              - codepipeline:PutJobFailureResult
            Resource:
              - "*"
      Roles:
        - !Ref TransferFunctionExecutionRole

  TransferFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${TransferFunction}"
      RetentionInDays: 1

Outputs:

  TransferFunction:
    Description: CodePipeline Function Name
    Value: !Ref TransferFunction
    Export:
      Name: TransferFunctionName

  TransferFunctionArn:
    Description: CodePipeline Function ARN
    Value: !GetAtt TransferFunction.Arn
    Export:
      Name: TransferFunctionArn

  TransferFunctionRoleArn:
    Description: Transfer Lambda Function IAM Role Arn
    Value: !GetAtt TransferFunctionExecutionRole.Arn
    Export:
      Name: TransferFunctionRoleArn
